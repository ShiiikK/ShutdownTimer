<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifi.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>